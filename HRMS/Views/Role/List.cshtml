@model List<UserRoleViewModel>
@{
}


<main id="main" class="main">

    <div class="pagetitle">
      <h1>Account and Role Table</h1>
      <nav>
        <ol class="breadcrumb">
          <li class="breadcrumb-item"><a>Home</a></li>
          <li class="breadcrumb-item">Roles</li>
          <li class="breadcrumb-item active">List</li>
        </ol>
      </nav>
    </div><!-- End Page Title -->

    <section class="section">
      <div class="row">
        <div class="col-lg-12">

          <div class="card">
            <div class="card-body">
            <br />
            <form action="List">
              <div class="row justify-content-between">
                <div class="col-sm-4">
                  <div class="input-group md-form align-content-sm-around form-2 pl-0">
                    <div class="col-sm-2">
                      <label class="mr-2 mt-2">Filter:</label>
                    </div>
                    <div class="col-sm-10">
                      <select id="department-filter" name="searchOption" class="form-select" asp-items="ViewBag.Departments"></select>
                    </div>
                  </div>
                </div>
              </div>
            </form>
            <br />
              <!-- Table with stripped rows -->
              <table  id="employee-table" class="table datatable">
                <thead>
                  <tr>
                    <th>No.</th>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Department</th>
                    <th>Role Name</th>
                    <th></th>
                  </tr>
                </thead>
                <tbody>
                 @{int i=0;}
                 @foreach(var userRole in Model){
                    <tr>
                      <td>@(++i)</td>
                      <td>@userRole.FullName</td>
                      <td>@userRole.Email</td>
                      <td data-department-id="@userRole.deptId">@userRole.Department</td>
                      <td>@userRole.RoleName</td>
                      <td><a class="btn btn-primary" role="button" asp-action="UpdateUserRole" asp-route-roleName="@userRole.RoleName" asp-route-userId="@userRole.UserId">Assign Role</a></td>
                    </tr>
                }
                </tbody>
              </table>
              <!-- End Table with stripped rows -->

            </div>
          </div>

        </div>
      </div>
    </section>

  </main><!-- End #main -->

  @if(TempData["RoleAlert"] != null)
    {
    <script>
        // Show the alert
        Swal.fire({
            title: "Alert",
            text: '@TempData["RoleAlert"]',
            icon: "",
            confirmButtonColor: "#3085d6",
            confirmButtonText: "OK",
            position: "top",
        });
    </script>
    }

  <script>
    const departmentFilter = document.getElementById('department-filter');
    const employeeTable = document.getElementById('employee-table');

    departmentFilter.addEventListener('change', () => {
      const selectedDepartmentId = parseInt(departmentFilter.value);
      const rows = employeeTable.querySelectorAll('tbody tr');

      rows.forEach((row) => {
        const departmentId = parseInt(row.querySelector('[data-department-id]').getAttribute('data-department-id'));

        if (isNaN(selectedDepartmentId) || selectedDepartmentId === 0 || departmentId === selectedDepartmentId) {
          row.style.display = 'table-row';
        } else {
          row.style.display = 'none';
        }
      });
    });
</script>

